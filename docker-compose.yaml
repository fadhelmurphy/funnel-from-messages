services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: sparks
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sparks"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
    volumes:
      - ./minio_data:/data


  api:
    build: ./api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
      worker:
        condition: service_started
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://app:secret@postgres:5432/sparks
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password123
      - RAW_BUCKET=raw-payloads
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sparks"]

  worker:
    build: ./worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://app:secret@postgres:5432/sparks
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password123
      - RAW_BUCKET=raw-payloads
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sparks"]

  keyword-sync:
    build: ./keyword_sync
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      api:
        condition: service_started
    environment:
      - REDIS_URL=redis://redis:6379/0
      - GOOGLE_SA_JSON=/secrets/google-service-account.json
      - PYTHONUNBUFFERED=1
    volumes:
      - ./secrets:/secrets:ro

  funnel-etl:
    build: ./etl
    volumes:
      - ./etl:/app
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      api:
        condition: service_started
      worker:
        condition: service_started
      keyword-sync:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://app:secret@postgres:5432/sparks
      - REDIS_URL=redis://redis:6379/0
      - PYTHONUNBUFFERED=1

  db-init:
    image: postgres:15
    depends_on:
      - postgres
    volumes:
      - ./db/init.sql:/scripts/init.sql:ro
    environment:
      PGPASSWORD: secret
    entrypoint:
      - bash
      - -c
      - |
        until pg_isready -h postgres -p 5432; do sleep 1; done
        psql -h postgres -U app -d sparks -f /scripts/init.sql
    restart: "no"

volumes:
  pgdata:
  miniodata:
